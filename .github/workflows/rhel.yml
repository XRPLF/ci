name: RHEL

on:
  push:
    paths:
      - .github/workflows/rhel.yml
      - docker/rhel/Dockerfile

env:
  GITHUB_REGISTRY: ghcr.io
  REDHAT_REGISTRY: registry.redhat.io
  REDHAT_USER: 19221817|Docker
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  CONAN_VERSION: 2.17.0

jobs:
  # Build the Docker image for Red Hat Enterprise Linux using different versions
  # of GCC.
  gcc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - os: 9.6
            gcc: 13
          - os: 9.6
            gcc: 14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Login to GitHub Registry
        run: echo '${{ secrets.GITHUB_TOKEN }}' | docker login ${GITHUB_REGISTRY} -u '${{ github.repository_owner }}' --password-stdin
      - name: Login to Red Hat Registry
        run: echo '${{ secrets.REDHAT_TOKEN }}' | docker login ${REDHAT_REGISTRY} -u '${{ env.REDHAT_USER }}' --password-stdin
      - name: Determine the Docker image name.
        run: |
          # Convert the repository name to lowercase as the organization name is
          # uppercase, which is not permitted by the Docker registry.
          DOCKER_REPOSITORY=${GITHUB_REPOSITORY,,}
          echo "DOCKER_IMAGE=${GITHUB_REGISTRY}/${DOCKER_REPOSITORY}/rhel-${{ matrix.version.os }}:gcc${{ matrix.version.gcc }}" >> $GITHUB_ENV
      - name: Build the Docker image
        working-directory: docker/rhel
        run: |
          docker build . \
          --target gcc \
          --build-arg GITHUB_REPO=${GITHUB_REPOSITORY} \
          --build-arg RHEL_VERSION=${{ matrix.version.os }} \
          --build-arg GCC_VERSION=${{ matrix.version.gcc }} \
          --build-arg CONAN_VERSION=${{ env.CONAN_VERSION }} \
          --tag ${{ env.DOCKER_IMAGE }}
      - name: Push the Docker image
        run: docker push ${{ env.DOCKER_IMAGE }}

  # Build the Docker image for Red Hat Enterprise Linux using Clang. As we use
  # the free UBIs we cannot select specific versions of Clang and only get what
  # is available in the base image.
  clang:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - os: 9.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Login to GitHub Registry
        run: echo '${{ secrets.GITHUB_TOKEN }}' | docker login ${GITHUB_REGISTRY} -u '${{ github.repository_owner }}' --password-stdin
      - name: Login to Red Hat Registry
        run: echo '${{ secrets.REDHAT_TOKEN }}' | docker login ${REDHAT_REGISTRY} -u '${{ env.REDHAT_USER }}' --password-stdin
      - name: Determine the Docker image name.
        run: |
          # Convert the repository name to lowercase as the organization name is
          # uppercase, which is not permitted by the Docker registry.
          DOCKER_REPOSITORY=${GITHUB_REPOSITORY,,}
          echo "DOCKER_IMAGE=${GITHUB_REGISTRY}/${DOCKER_REPOSITORY}/rhel-${{ matrix.version.os }}:clang" >> $GITHUB_ENV
      - name: Build the Docker image
        working-directory: docker/rhel
        run: |
          docker build . \
          --target clang \
          --build-arg GITHUB_REPO=${GITHUB_REPOSITORY} \
          --build-arg RHEL_VERSION=${{ matrix.version.os }} \
          --build-arg CONAN_VERSION=${{ env.CONAN_VERSION }} \
          --tag ${{ env.DOCKER_IMAGE }}
      - name: Push the Docker image
        run: docker push ${{ env.DOCKER_IMAGE }}
